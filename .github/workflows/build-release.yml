name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送版本标签时触发
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write  # 允许创建release和上传文件
  actions: read    # 允许读取actions
  checks: write    # 允许写入检查状态

jobs:
  build:
    runs-on: windows-latest  # 使用 Windows 构建 .exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set UTF-8 encoding
      run: |
        $env:PYTHONIOENCODING = "utf-8"
        $env:PYTHONUTF8 = "1"
        echo "PYTHONIOENCODING=utf-8" >> $env:GITHUB_ENV
        echo "PYTHONUTF8=1" >> $env:GITHUB_ENV

    - name: Build executable
      run: |
        python build.py
      env:
        PYTHONIOENCODING: utf-8
        PYTHONUTF8: 1

    - name: Verify build output
      run: |
        if (Test-Path "release/bilibili-ai-partition.exe") {
          Write-Host "✅ Build successful - executable found"
          Get-ChildItem release/ | Format-Table Name, Length
        } else {
          Write-Host "❌ Build failed - executable not found"
          Get-ChildItem -Recurse | Where-Object {$_.Name -like "*.exe"} | Format-Table FullName, Length
          exit 1
        }
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bilibili-ai-partition-windows
        path: release/

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: softprops/action-gh-release@v2
      continue-on-error: true
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          release/bilibili-ai-partition.exe
          release/README.md
          release/requirements.txt
          release/.env.example
          release/Usage-Instructions.txt
        body: |
          ## 🎉 bilibili-ai-partition ${{ github.ref_name }}

          ### 📦 Quick Start
          1. Download `bilibili-ai-partition.exe`
          2. Double-click to run
          3. Follow the configuration wizard
          4. Start intelligent grouping

          ### ✨ Features
          - 🤖 AI-powered UP analysis
          - 📊 Automatic group creation and assignment
          - 🔍 Dry-run mode for testing
          - ⚙️ Configurable AI batch size

          ### 🔒 Security Notes
          - Keep your Cookie and API keys secure
          - Don't use in public environments
          - Regularly rotate your credentials

          ### 📋 Files Included
          - `bilibili-ai-partition.exe` - Main executable (23MB)
          - `README.md` - Detailed documentation
          - `requirements.txt` - Dependencies list
          - `.env.example` - Configuration template
          - `Usage-Instructions.txt` - Quick usage guide
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Fallback Release Creation
      if: startsWith(github.ref, 'refs/tags/') && failure()
      run: |
        echo "Primary release creation failed, trying alternative method..."
        gh release create ${{ github.ref_name }} \
          release/bilibili-ai-partition.exe \
          release/README.md \
          release/requirements.txt \
          release/.env.example \
          release/Usage-Instructions.txt \
          --title "Release ${{ github.ref_name }}" \
          --notes "Automated release for ${{ github.ref_name }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}